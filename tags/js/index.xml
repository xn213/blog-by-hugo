<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>js on xn213</title>
    <link>https://xn213.github.io/hugo-blog/tags/js/</link>
    <description>Recent content in js on xn213</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Jul 2017 21:13:32 +0800</lastBuildDate>
    
	<atom:link href="https://xn213.github.io/hugo-blog/tags/js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JS Snippets</title>
      <link>https://xn213.github.io/hugo-blog/2017/07/js-snippets/</link>
      <pubDate>Tue, 25 Jul 2017 21:13:32 +0800</pubDate>
      
      <guid>https://xn213.github.io/hugo-blog/2017/07/js-snippets/</guid>
      <description>一些常用的代码块,
JS Snippets // isObject function isObject (obj) { return obj !== null &amp;amp;&amp;amp; typeof obj === &#39;object&#39; } // 判断数据是数字，可能类型是string，但是&#39;123&#39;也算数字 function isNumber(value) { return !isNaN(Number(value)); } // isEmpty const isEmpty = value =&amp;gt; { return value === undefined || value === null || (typeof value === &amp;quot;object&amp;quot; &amp;amp;&amp;amp; Object.keys(value).length === 0) || (typeof value === &amp;quot;string&amp;quot; &amp;amp;&amp;amp; value.trim().length === 0) }  ↑ Back to Top
如何判断一个对象是否为数组 如果浏览器支持 Array.</description>
    </item>
    
    <item>
      <title>Js 面试题大搜罗</title>
      <link>https://xn213.github.io/hugo-blog/2017/07/js-%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%90%9C%E7%BD%97/</link>
      <pubDate>Tue, 25 Jul 2017 17:50:20 +0800</pubDate>
      
      <guid>https://xn213.github.io/hugo-blog/2017/07/js-%E9%9D%A2%E8%AF%95%E9%A2%98%E5%A4%A7%E6%90%9C%E7%BD%97/</guid>
      <description>js 面试题搜罗, 一些代码段
js 面试题搜罗 ES6 /////////////////////////////// // from page-82 // try-p82-keys var obj ={ a:1, b:2, }; Object.setPrototypeOf(obj,{ c:3, }); console.log(Object.keys(obj)); // [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;] console.log(JSON.stringify(obj)); // {&amp;quot;a&amp;quot;:1,&amp;quot;b&amp;quot;:2} var keys1 =[]; for(let key in obj)keys1.push(key); console.log(keys1); // [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;] var keys2 =[]; for(let key in Object.assign({},obj))keys2.push(key); console.log(keys2); // [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;] ///////////////////////////////  逻辑 /////////////////////////////// // 逻辑 a=1 b=2 不使用第三个变了量交换a,b // var a = 1, b = 2; // // 最牛逼的 // a = [b,b=a][0] // 0使用临时变量 - low // var t = a // a = b // b = t // 1 // a = a + b // b = a - b // a = a - b // 2-1 // a = a^b //a^=b // b = b^a //b^=a // a = a^b //a^=b // 2-2 // a = (b^=a^=b)^a; // 3 // a = {a: b,b: a} // b = a.</description>
    </item>
    
  </channel>
</rss>