<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>解决方案 on xn213</title>
    <link>https://xn213.github.io/hugo-blog/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
    <description>Recent content in 解决方案 on xn213</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Dec 2018 21:10:13 +0800</lastBuildDate>
    
	<atom:link href="https://xn213.github.io/hugo-blog/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vue Codes</title>
      <link>https://xn213.github.io/hugo-blog/2018/12/vue-codes/</link>
      <pubDate>Thu, 13 Dec 2018 21:10:13 +0800</pubDate>
      
      <guid>https://xn213.github.io/hugo-blog/2018/12/vue-codes/</guid>
      <description> 自定义指令: 权限指令 // v-allow 指令, 值与路由meta字段对比, 绑定的内容显示与否 Vue.directive(&#39;allow&#39;, { inserted: (el, binding, vnode) =&amp;gt; { let permissionList = vnode.context.$route.meta.permission if(!permissionList.includes(binding.value)){ el.parentNode.removeChild(el) } } })  // 使用
&amp;lt;a @click=&amp;quot;upload&amp;quot; v-allow=&amp;quot;&#39;3&#39;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; /* 3代表一个上传权限的ID，权限中有3则显示按钮 */  </description>
    </item>
    
    <item>
      <title>Fe Solutions</title>
      <link>https://xn213.github.io/hugo-blog/2017/02/fe-solutions/</link>
      <pubDate>Mon, 13 Feb 2017 21:13:10 +0800</pubDate>
      
      <guid>https://xn213.github.io/hugo-blog/2017/02/fe-solutions/</guid>
      <description>前端遇到的问题及解决方案:  页面多个音频 audio 只允许播放一个 js 解决方案: (video 同理)  const audios = document.getElementsByTagName(&amp;quot;audio&amp;quot;); // 暂停函数 function pauseAll() { let self = this; [].forEach.call(audios, function (i) { // 将audios中其他的audio全部暂停 i !== self &amp;amp;&amp;amp; i.pause(); }) } // 给play事件绑定暂停函数 [].forEach.call(audios, function (i) { i.addEventListener(&amp;quot;play&amp;quot;, pauseAll.bind(i)); });  ↑ Back to Top
 Vscode 格式化 vue Template 代码段  1、安装 vetur
2、在 User Setting 中增加设置: &amp;quot;vetur.format.defaultFormatter.html&amp;quot;: &amp;quot;js-beautify-html&amp;quot;
3、搞定 : 格式化快捷键：Alt+Shift+F
↑ Back to Top</description>
    </item>
    
  </channel>
</rss>