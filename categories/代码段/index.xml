<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>代码段 on xn213</title>
    <link>https://xn213.github.io/hugo-blog/categories/%E4%BB%A3%E7%A0%81%E6%AE%B5/</link>
    <description>Recent content in 代码段 on xn213</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Jul 2017 21:13:32 +0800</lastBuildDate>
    
	<atom:link href="https://xn213.github.io/hugo-blog/categories/%E4%BB%A3%E7%A0%81%E6%AE%B5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code Snippets</title>
      <link>https://xn213.github.io/hugo-blog/2017/07/code-snippets/</link>
      <pubDate>Tue, 25 Jul 2017 21:13:32 +0800</pubDate>
      
      <guid>https://xn213.github.io/hugo-blog/2017/07/code-snippets/</guid>
      <description>一些常用的代码块,
Code Snippets // isObject function isObject (obj) { return obj !== null &amp;amp;&amp;amp; typeof obj === &#39;object&#39; } //  ↑ Back to Top
如何判断一个对象是否为数组 如果浏览器支持 Array.isArray()可以直接判断, 否则需进行必要判断
/** * 判断一个对象是否是数组，参数不是对象或者不是数组，返回false * * @param {Object} arg 需要测试是否为数组的对象 * @return {Boolean} 传入参数是数组返回true，否则返回false */ function isArray(arg) { if (typeof arg === &#39;object&#39;) { return Object.prototype.toString.call(arg) === &#39;[object Array]&#39;; } return false; }  ↑ Back to Top
如何判断一个对象是否为函数 /** * 判断对象是否为函数，如果当前运行环境对可调用对象（如正则表达式） * 的typeof返回&#39;function&#39;，采用通用方法，否则采用优化方法 * * @param {Any} arg 需要检测是否为函数的对象 * @return {boolean} 如果参数是函数，返回true，否则false */ function isFunction(arg) { if (arg) { if (typeof (/.</description>
    </item>
    
  </channel>
</rss>